<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.highway.tunnelMonitoring.mapper.ventilation.VenAxFnMapper">
    <select id="venAxFnFindAll" resultType="com.highway.tunnelMonitoring.domain.ventilation.venaxfn.VenAxFn">
        SELECT * FROM (
                          SELECT a.*, ROWNUM rnum
                          FROM (
                                   SELECT * FROM VEN_AX_FN
                                   where LINK_ID = #{link_id}
                                   ORDER BY
                                        <if test="sort_column == 'ven_ax_fn_id'">
                                            TO_NUMBER(REGEXP_SUBSTR(ven_ax_fn_id, '\d+'))
                                        </if>
                                        <if test="sort_column == 'instl_lc'">
                                            instl_lc
                                        </if>
                                        <if test="sort_column == 'instl_de'">
                                            instl_de
                                        </if>
                                        <if test="sort_column == 'model_nm'">
                                            model_nm
                                        </if>
                                        <if test="sort_direction == 'asc'">
                                            ASC
                                        </if>
                                        <if test="sort_direction == 'desc'">
                                            DESC
                                        </if>
                               ) a
                      )
        WHERE rnum BETWEEN #{offset} + 1 AND #{offset} + #{limit}
    </select>

    <select id="venAxFnCountAll" resultType="int">
        SELECT COUNT(*) FROM VEN_AX_FN WHERE LINK_ID = #{link_id}
    </select>

    <select id="venAxFnMonitorCountAll" resultType="int">
        SELECT COUNT(*) FROM VEN_AX_FN_STTUS WHERE LINK_ID = #{link_id}
    </select>

    <select id="venAxFnFaultCountAll" resultType="int">
        SELECT COUNT(*) FROM VEN_AX_FN_FAULT_HISTORY WHERE LINK_ID = #{link_id} AND FAULT_START_DATETIME >= #{startDate}
                                                       AND FAULT_START_DATETIME &lt;= #{endDate}
    </select>

    <select id="venAxFnRunCountAll" resultType="int">
        SELECT COUNT(*) FROM VEN_AX_FN_RUN_HISTORY WHERE LINK_ID = #{link_id} AND RUN_START_DATETIME >= #{startDate}
                                                     AND RUN_START_DATETIME &lt;= #{endDate}
    </select>

    <select id="venAxFnStatCountAll" resultType="int">
        SELECT COUNT(*) FROM VEN_AX_FN_STAT WHERE LINK_ID = #{link_id} AND RECORD_DATE >= #{startDate}
                                              AND RECORD_DATE &lt;= #{endDate}
    </select>


    <insert id="venAxFnEnroll">
        insert into VEN_AX_FN(VEN_AX_FN_ID, link_id, FAN_TYPE, MODEL_NM, X_CRDNT, Y_CRDNT, instl_lc, instl_de)
        values(#{ven_ax_fn_id}, #{link_id}, #{fan_type}, #{model_nm}, #{x_crdnt}, #{y_crdnt}, #{instl_lc}, #{instl_de})
    </insert>

    <update id="venAxFnUpdate">
        update VEN_AX_FN set instl_lc = #{instl_lc}, instl_de = #{instl_de}
        where VEN_AX_FN_ID = #{ven_ax_fn_id} and LINK_ID = #{link_id}
    </update>

    <update id="venAxFnUpdateSttus">
        update VEN_AX_FN_STTUS set REMOTE_MODE = #{remote_mode},
                                   RUN_STTUS = #{run_sttus},
                                   FAULT_STTUS = #{fault_sttus}
        where VEN_AX_FN_ID = #{ven_ax_fn_id} and LINK_ID = #{link_id}
    </update>

    <delete id="venAxFnDelete">
        delete from VEN_AX_FN where VEN_AX_FN_ID = #{ven_ax_fn_id} and LINK_ID = #{link_id}
    </delete>

    <select id="venAxFnMonitor" resultType="com.highway.tunnelMonitoring.domain.ventilation.venaxfn.VenAxFnSttus">
        SELECT * FROM (
                          SELECT a.*, ROWNUM rnum
                          FROM (
                                   SELECT * FROM VEN_AX_FN_STTUS
                                   where LINK_ID = #{link_id}
                                   ORDER BY
                                        <if test="sort_column == 'ven_ax_fn_id'">
                                            TO_NUMBER(REGEXP_SUBSTR(ven_ax_fn_id, '\d+'))
                                        </if>
                                        <if test="sort_column == 'run_sttus'">
                                            run_sttus
                                        </if>
                                        <if test="sort_column == 'fault_sttus'">
                                            fault_sttus
                                        </if>
                                        <if test="sort_column == 'bypass_sttus'">
                                            bypass_sttus
                                        </if>
                                        <if test="sort_direction == 'asc'">
                                            ASC
                                        </if>
                                        <if test="sort_direction == 'desc'">
                                            DESC
                                        </if>
                               ) a
                      )
        WHERE rnum BETWEEN #{offset} + 1 AND #{offset} + #{limit}
    </select>


    <insert id="venAxFnCreateFaultHistory">
        insert into VEN_AX_FN_FAULT_HISTORY(VEN_AX_FN_ID, link_id, FAULT_START_DATETIME)
        values(#{ven_ax_fn_id}, #{link_id}, #{fault_start_datetime})
    </insert>


    <update id="venAxFnUpdateFaultHistory">
        update VEN_AX_FN_FAULT_HISTORY set FAULT_END_DATETIME = #{fault_end_datetime}
        where VEN_AX_FN_ID = #{ven_ax_fn_id} and LINK_ID = #{link_id} and FAULT_START_DATETIME = #{fault_start_datetime}
    </update>

    <select id="venAxFnFaultHistory" resultType="com.highway.tunnelMonitoring.domain.ventilation.venaxfn.VenAxFnFaultHistory">
        SELECT * FROM (
                          SELECT a.*, ROWNUM rnum
                          FROM (
                                   SELECT * FROM VEN_AX_FN_FAULT_HISTORY
                                   where LINK_ID = #{link_id}
                                     AND FAULT_START_DATETIME >= #{startDate}
                                     AND FAULT_START_DATETIME &lt;= #{endDate}
                                   ORDER BY
                                        <if test="sort_column == 'ven_ax_fn_id'">
                                            TO_NUMBER(REGEXP_SUBSTR(ven_ax_fn_id, '\d+'))
                                        </if>
                                        <if test="sort_column == 'fault_start_datetime'">
                                            fault_start_datetime
                                        </if>
                                        <if test="sort_column == 'fault_end_datetime'">
                                            fault_end_datetime
                                        </if>
                                        <if test="sort_direction == 'asc'">
                                            ASC
                                        </if>
                                        <if test="sort_direction == 'desc'">
                                            DESC
                                        </if>
                               ) a
                      )
        WHERE rnum BETWEEN #{offset} + 1 AND #{offset} + #{limit}
    </select>


    <insert id="venAxFnCreateRunHistory">
        insert into VEN_AX_FN_RUN_HISTORY(VEN_AX_FN_ID, link_id, RUN_START_DATETIME)
        values(#{ven_ax_fn_id}, #{link_id}, #{run_start_datetime})
    </insert>


    <update id="venAxFnUpdateRunHistory">
        update VEN_AX_FN_RUN_HISTORY set RUN_END_DATETIME = #{run_end_datetime}
        where VEN_AX_FN_ID = #{ven_ax_fn_id} and LINK_ID = #{link_id} and RUN_START_DATETIME = #{run_start_datetime}
    </update>

    <select id="venAxFnRunHistory" resultType="com.highway.tunnelMonitoring.domain.ventilation.venaxfn.VenAxFnRunHistory">
        SELECT * FROM (
                          SELECT a.*, ROWNUM rnum
                          FROM (
                                   SELECT * FROM VEN_AX_FN_RUN_HISTORY
                                   where LINK_ID = #{link_id}
                                     AND RUN_START_DATETIME >= #{startDate}
                                     AND RUN_START_DATETIME &lt;= #{endDate}
                                   ORDER BY
                                        <if test="sort_column == 'ven_ax_fn_id'">
                                            TO_NUMBER(REGEXP_SUBSTR(ven_ax_fn_id, '\d+'))
                                        </if>
                                        <if test="sort_column == 'run_start_datetime'">
                                            run_start_datetime
                                        </if>
                                        <if test="sort_column == 'run_end_datetime'">
                                            run_end_datetime
                                        </if>
                                        <if test="sort_direction == 'asc'">
                                            ASC
                                        </if>
                                        <if test="sort_direction == 'desc'">
                                            DESC
                                        </if>
                               ) a
                      )
        WHERE rnum BETWEEN #{offset} + 1 AND #{offset} + #{limit}
    </select>

    <select id="venAxFnStat" resultType="com.highway.tunnelMonitoring.domain.ventilation.venaxfn.VenAxFnStat">
        SELECT * FROM (
                          SELECT a.*, ROWNUM rnum
                          FROM (
                                   SELECT * FROM VEN_AX_FN_STAT
                                   where LINK_ID = #{link_id}
                                     AND RECORD_DATE >= #{startDate}
                                     AND RECORD_DATE &lt;= #{endDate}
                                   ORDER BY
                                        <if test="sort_column == 'ven_ax_fn_id'">
                                            TO_NUMBER(REGEXP_SUBSTR(ven_ax_fn_id, '\d+'))
                                        </if>
                                        <if test="sort_column == 'record_date'">
                                            record_date
                                        </if>
                                        <if test="sort_column == 'run_time_hours'">
                                            run_time_hours
                                        </if>
                                        <if test="sort_column == 'fault_count'">
                                            fault_count
                                        </if>
                                        <if test="sort_column == 'run_count'">
                                            run_count
                                        </if>
                                        <if test="sort_direction == 'asc'">
                                            ASC
                                        </if>
                                        <if test="sort_direction == 'desc'">
                                            DESC
                                        </if>
                               ) a
                      )
        WHERE rnum BETWEEN #{offset} + 1 AND #{offset} + #{limit}
    </select>


    <insert id="venAxFnRecordStat">
        INSERT INTO ven_ax_fn_stat (ven_ax_fn_id, link_id, record_date, run_time_hours, fault_count, run_count)
        SELECT
            r.ven_ax_fn_id,
            r.link_id,
            TRUNC(SYSDATE - 1) AS record_date,  -- 어제 날짜 기준으로 기록

            -- 가동 시간 계산 (초 단위로 변환 후, 시간으로 변환)
            SUM(
                    CASE
                        -- 어제 시작되고 어제 종료된 경우
                        WHEN TRUNC(r.run_start_datetime) = TRUNC(SYSDATE - 1)
                            AND TRUNC(r.run_end_datetime) = TRUNC(SYSDATE - 1) THEN
                            (EXTRACT(HOUR FROM (r.run_end_datetime - r.run_start_datetime)) +
                             EXTRACT(MINUTE FROM (r.run_end_datetime - r.run_start_datetime)) / 60)  -- 시간과 분 계산

                    -- 어제 시작되고 아직 종료되지 않은 경우 (24시간에서 시작 시간만큼 뺌)
                        WHEN TRUNC(r.run_start_datetime) = TRUNC(SYSDATE - 1)
                            AND r.run_end_datetime IS NULL THEN
                            24 - (EXTRACT(HOUR FROM r.run_start_datetime) +
                                  EXTRACT(MINUTE FROM r.run_start_datetime) / 60)  -- 24시간에서 시작 시간을 뺀 값

                    -- 전날 시작되어 어제 종료된 경우 (종료 시간만 사용)
                        WHEN TRUNC(r.run_start_datetime) &lt; TRUNC(SYSDATE - 1)
                            AND TRUNC(r.run_end_datetime) = TRUNC(SYSDATE - 1) THEN
                            (EXTRACT(HOUR FROM r.run_end_datetime) +
                             EXTRACT(MINUTE FROM r.run_end_datetime) / 60)  -- 자정부터 종료 시점까지 시간 계산

                    -- 전날 시작되어 아직 종료되지 않은 경우 (24시간으로 설정)
                        WHEN TRUNC(r.run_start_datetime) &lt; TRUNC(SYSDATE - 1)
                            AND r.run_end_datetime IS NULL THEN
                            24  -- 자정부터 현재까지 24시간으로 설정

                        ELSE 0
                        END
            ) AS run_time_hours,  -- 시간을 시간 단위로 변환

            -- 고장 횟수 계산
            (SELECT COUNT(f.fault_start_datetime)
             FROM ven_ax_fn_fault_history f
             WHERE f.ven_ax_fn_id = r.ven_ax_fn_id
               AND f.link_id = r.link_id
               AND TRUNC(f.fault_start_datetime) = TRUNC(SYSDATE - 1)) AS fault_count,

            -- 가동 횟수 계산
            COUNT(CASE WHEN TRUNC(r.run_start_datetime) = TRUNC(SYSDATE - 1) THEN 1 END) AS run_count


        FROM ven_ax_fn_run_history r
        WHERE TRUNC(r.run_start_datetime) &lt;= TRUNC(SYSDATE - 1)
          AND (TRUNC(r.run_end_datetime) >= TRUNC(SYSDATE - 1)
            OR r.run_end_datetime IS NULL)
        GROUP BY r.ven_ax_fn_id, r.link_id;

    </insert>
</mapper>